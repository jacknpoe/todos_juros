AppType=StandardJava
Build1=Default,b4j.example
Group=Default Group
Library1=jcore
NumberOfFiles=0
NumberOfLibraries=1
NumberOfModules=0
Version=10
@EndOfDesignText@
' Cálculo dos juros, sendo que precisa de parcelas pra isso
' Versão 0.1: 10/02/2025: versão feita sem muito conhecimento de B4X

#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True 
#End Region

Sub Process_Globals
	' variáveis globais para simplificar as chamadas
	Public Quantidade = 3 As Int
	Public Composto = True As Boolean
	Public Periodo = 30.0 As Double
	Public Pagamentos(Quantidade), Pesos(Quantidade) As Double
End Sub

' calcula a somatória de Pesos()
Sub getPesoTotal() As Double
	Private acumulador = 0.0 As Double
	For indice = 0 To Quantidade - 1
		acumulador = acumulador + Pesos(indice)
	Next
	Return acumulador
End Sub

' calcula o acréscimo a partir dos juros e parcelas
Sub jurosParaAcrescimo(juros As Double) As Double
	Private pesoTotal, acumulador As Double
	pesoTotal = getPesoTotal
	If pesoTotal <= 0.0 Or Quantidade < 1 Or Periodo <= 0.0 Or juros <= 0.0 Then
		Return 0.0
	End If
	
	acumulador = 0.0
	For indice = 0 To Quantidade - 1
		If Composto Then
			acumulador = acumulador + Pesos(indice) / Power(1.0 + juros / 100, Pagamentos(indice) / Periodo)
		Else
			acumulador = acumulador + Pesos(indice) / (1.0 + juros / 100 * Pagamentos(indice) / Periodo)
		End If
	Next
	
	If acumulador <= 0.0 Then
		Return 0.0
	End If
	Return (pesoTotal / acumulador - 1.0) * 100
End Sub

' calcula os juros a partir do acréscimo e parcelas
Sub acrescimoParaJuros(acrescimo As Double, precisao As Int, maxIteracoes As Int, maxJuros as Double) As Double
	Private pesoTotal, minJuros, medJuros, minDiferenca As Double
	pesoTotal = getPesoTotal
	If pesoTotal <= 0.0 Or Quantidade < 1 Or Periodo <= 0.0 Or acrescimo <= 0.0 Or precisao < 1 Or maxIteracoes < 1 Or maxJuros <= 0.0 Then
		Return 0.0
	End If
	
	minJuros = 0.0
	minDiferenca = Power(0.1, precisao)
	For indice = 1 To maxIteracoes
		medJuros = (minJuros + maxJuros) / 2.0
		If (maxJuros - minJuros) < minDiferenca Then
			Return medJuros
		End If
		If jurosParaAcrescimo(medJuros) < acrescimo Then
			minJuros = medJuros
		Else
			maxJuros = medJuros
		End If
	Next
	
	Return medJuros
End Sub	

Sub AppStart (Args() As String)
	Private pesoTotal, acrescimoCalculado, jurosCalculado As Double

	' inicializa os arrays	
	For indice = 0 To Quantidade - 1
		Pagamentos(indice) = 30.0 * (indice + 1.0)
		Pesos(indice) = 1.0
	Next
	
	' calcula e guarda o resultado das funções
	pesoTotal = getPesoTotal
	acrescimoCalculado = jurosParaAcrescimo(3.0)
	jurosCalculado = acrescimoParaJuros(acrescimoCalculado, 15, 100, 50.0)

	Log("Peso total = " & NumberFormat(pesoTotal, 0, 15))
	Log("Acrescimo = " & NumberFormat(acrescimoCalculado, 0, 15))
	Log("Juros = " & NumberFormat(jurosCalculado, 0, 15))
End Sub
