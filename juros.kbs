# Cálculo dos juros, sendo que precisa de parcelas pra isso
# Versão 0.1: 08/04/2025: versão feita sem muito conhecimento de BASIC-256

# variáveis globais para simplificar as chamadas de função
global Quantidade, Composto, Periodo, Pagamentos, Pesos
Quantidade = 3
Composto = true
Periodo = 30.0
dim Pagamentos[Quantidade]
dim Pesos[Quantidade]

# inicializa os arrays dinamicamente
for indice = 0 to Quantidade - 1
	Pagamentos[indice] = (indice + 1.0) * Periodo
	Pesos[indice] = 1.0
next indice

# calcula e guarda os retornos das funções
pesoTotal = getPesoTotal()
acrescimoCalculado = jurosParaAcrescimo(3)
jurosCalculado = acrescimoParaJuros(acrescimoCalculado, 15, 100, 50.0)

# imprime os resultados
print "Peso total = " + pesoTotal
print "Acréscimo = " + acrescimoCalculado
print "Juros = " + jurosCalculado

end

# calcula a somatória de Pesos[]
function getPesoTotal()
	acumulador = 0.0
	for indice = 0 to Quantidade - 1
		acumulador += Pesos[indice]
	next indice
	return acumulador
end function

# calcula o acréscimo a partir dos juros e parcelas
function jurosParaAcrescimo(juros)
	pesoTotal = getPesoTotal()
	if Quantidade < 1 or Periodo <= 0.0 or pesoTotal <= 0.0 or juros <= 0.0 then
		return 0.0
	end if
	acumulador = 0.0
	for indice = 0 to Quantidade - 1
		if Composto then
			acumulador += Pesos[indice] / (1.0 + juros / 100.0) ^ (Pagamentos[indice] / Periodo)
		else
			acumulador += Pesos[indice] / (1.0 + juros / 100.0 * Pagamentos[indice] / Periodo)
		end if
	next indice
	if acumulador <= 0.0 then
		return 0.0
	end if
	return (pesoTotal / acumulador - 1.0) * 100.0
end function

# calcula os juros a partir do acréscimo e parcelas
function acrescimoParaJuros(acrescimo, precisao, maxIteracoes, maxJuros)
	pesoTotal = getPesoTotal()
	if Quantidade < 1 or Periodo <= 0.0 or pesoTotal <= 0.0 or acrescimo <= 0.0 or precisao < 1 or maxIteracoes < 1 or maxJuros <= 0.0 then
		return 0.0
	end if
	minJuros = 0.0
	medJuros = maxJuros / 2.0
	minDiferenca = 0.1 ^ precisao
	for indice = 1 to maxIteracoes
		if maxJuros - minJuros < minDiferenca then
			return medJuros
		end if
		if jurosParaAcrescimo(medJuros) < acrescimo then
			minJuros = medJuros
		else
			maxJuros = medJuros
		end if
		medJuros = (minJuros + maxJuros) / 2.0
	next indice
	return medJuros
end function