// Cálculo dos juros, sendo que precisa de parcelas pra isso
// Versão 0.1: 07/01/2025: versão feita sem muito conhecimento de Frink

// classe com os valores que não mudam e os métodos
class Juros
{
	var Quantidade is unit = 0
	var Composto is boolean = false
	var Periodo is unit = 0.0
	var Pagamentos is array = new array
	var Pesos is array = new array

	// construtor (não inicializa os arrays)
	new[quantidade, composto, periodo] :=
	{
		Quantidade = quantidade
		Composto = composto
		Periodo = periodo
		for indice = 1 to quantidade
		{
			Pagamentos.push[0.0]
			Pesos.push[0.0]
		}
	}

	// altera o valor de Pagamentos[indice]
	setPagamento[indice, valor] :=
	{
		Pagamentos@indice = valor
	}

	// altera o valor de Pesos[indice]
	setPeso[indice, valor] :=
	{
		Pesos@indice = valor
	}

	// calcula a somatória de Pesos[]
	getPesoTotal[] :=
	{
		acumulador = 0.0
		for indice = 0 to Quantidade - 1
			acumulador = acumulador + Pesos@indice
		return acumulador
	}

	// calcula o acréscimo a partir dos juros e parcelas
	jurosParaAcrescimo[juros] :=
	{
		pesoTotal = getPesoTotal[]
		if juros <= 0.0 or Quantidade < 1 or Periodo < 0.0 or pesoTotal <= 0.0
			return 0.0

		acumulador = 0.0

		for indice = 0 to Quantidade - 1
			if Composto
				acumulador = acumulador + Pesos@indice / (1.0 + juros / 100.0) ^ (Pagamentos@indice / Periodo)
			else
				acumulador = acumulador + Pesos@indice / (1.0 + juros / 100.0 * Pagamentos@indice / Periodo)

		if acumulador <= 0.0
			return 0.0
		return (pesoTotal / acumulador - 1.0) * 100.0
	}

	// calcula os juros a partir do acréscimo e parcelas
	acrescimoParaJuros[acrescimo, precisao, maxIteracoes, maxJuros] :=
	{
		pesoTotal = getPesoTotal[]
		if maxIteracoes < 1 or Quantidade <= 0.0 or precisao < 1 or Periodo <= 0.0 or acrescimo <= 0.0 or maxJuros <= 0.0 or pesoTotal <= 0.0
			return 0.0

		minJuros = 0.0
		minDiferenca = 0.1 ^ precisao

		for indice = 1 to maxIteracoes
		{
			medJuros = (minJuros + maxJuros) / 2.0
			if (maxJuros - minJuros) < minDiferenca
				return medJuros
			if jurosParaAcrescimo[medJuros] < acrescimo
				minJuros = medJuros
			else
				maxJuros = medJuros
		}

		return medJuros
	}
}

// cria um objeto juros da classe Juros e inicializa as propriedades
oJuros = Juros.new[3, true, 30.0]
for indice = 0 to 2
{
	oJuros.setPagamento[indice, 30.0 * (indice + 1)]
	oJuros.setPeso[indice, 1.0]
}

// calcula e guarda os valores de retorno dos métodos
pesoTotal = oJuros.getPesoTotal[]
acrescimo = oJuros.jurosParaAcrescimo[3.0]
juros = oJuros.acrescimoParaJuros[acrescimo, 15, 100, 50.0]

// mostra os resultados
println["Peso total = " + pesoTotal]
println["Acréscimo = " + acrescimo]
println["Juros = " + juros]

// println[juros]

