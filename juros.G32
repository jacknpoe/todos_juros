' Cálculo dos juros, sendo que precisa de parcelas pra isso
' Versão 0.1: 21/04/2025: versão feita sem muito conhecimento de GFA-BASIC

Option Base 1  ' os arrays começam por 1

' variáveis globais, para simplificar as chamadas às funções
Global Quantidade As Integer = 3, Composto As Boolean = True, Periodo As Double = 30.0
Global Pagamentos(Quantidade) As Float, Pesos(Quantidade) As Float

' inicializa os arrays dinamicamente
Local indice As Integer
For indice = 1 To Quantidade
  Pagamentos(indice) = indice * Periodo
  Pesos(indice) = 1.0
Next

' chama e guarda os valores das funções
Local pesoTotal As Double = getPesoTotal()
Local acrescimoCalculado As Double = jurosParaAcrescimo(3.0)
Local jurosCalculado As Double = acrescimoParaJuros(acrescimoCalculado, 15, 100, 50.0)

' imprime os resultados
Print "PesoTotal = " + Str$(pesoTotal, 17, 15)
Print "Acréscimo = " + Str$(acrescimoCalculado, 17, 15)
Print "Juros = " + Str$(jurosCalculado, 17, 15)

' aguarda pressionar ENTER
Local foo As String
Input foo
End

' calcula a somatória de Pesos()
Function getPesoTotal() As Double
  Local acumulador As Double = 0.0, indice As Integer
  For indice = 1 To Quantidade
    acumulador = acumulador + Pesos(indice)
  Next indice
  Return acumulador
EndFunction

' calcula o acréscimo a partir dos juros e parcelas
Function jurosParaAcrescimo(juros As Double) As Double
  Local acumulador As Double = 0.0, pesoTotal = getPesoTotal(), indice As Integer
  If Quantidade < 1 Or Periodo <= 0.0 Or pesoTotal <= 0.0 Or juros <= 0.0 Then Return 0.0
  For indice = 1 To Quantidade
    If Composto
      acumulador = acumulador + Pesos(indice) / (1.0 + juros / 100) ^ (Pagamentos(indice) / Periodo)
    Else
      acumulador = acumulador + Pesos(indice) / (1.0 + juros / 100 * Pagamentos(indice) / Periodo)
    EndIf
  Next indice
  If acumulador <= 0.0 Then Return 0.0
  Return (pesoTotal / acumulador - 1.0) * 100.0
EndFunction

' calcula os juros a partir do acréscimo e parcelas
Function acrescimoParaJuros(acrescimo As Double, precisao As Integer, maxIteracoes As Integer, ByVal maxJuros As Double) As Double
  Local minJuros As Double = 0.0, medJuros As Double = maxJuros / 2.0, minDiferenca As Double = 0.1 ^ precisao, pesoTotal = getPesoTotal(), indice As Integer
  If Quantidade < 1 Or Periodo <= 0.0 Or pesoTotal <= 0.0 Or acrescimo <= 0.0 Or precisao < 1 Or maxIteracoes < 1 Or maxJuros <= 0.0 Then Return 0.0
  For indice = 1 To maxIteracoes
    If maxJuros - minJuros < minDiferenca Then Return medJuros
    If jurosParaAcrescimo(medJuros) < acrescimo Then minJuros = medJuros Else maxJuros = medJuros
    medJuros = (minJuros + maxJuros) / 2.0
  Next indice
  Return medJuros
EndFunction
